from pydantic import BaseModel, Field
from typing import Optional
import uuid


class User(BaseModel):
    """
    The model for a user in the mongodb Users collection:

    id    - id auto-generated by mongodb upon creation
    email - user's email entered on account creation saved as a string
    hash  - user's unique master hash generated on account creation saved as a string
    vault - user's encrypted data and IV saved as a concatenated string, can be None
    """
    id: str = Field(default_factory=uuid.uuid1, alias="_id")
    email: str = Field(...)
    hash: str = Field(...)
    vault: str | None = Field(...)

    class Config:
        allow_population_by_field_name = True
    

class UserUpdate(BaseModel):
    """
    The model for updating a user in the mongodb Users collection:
    
    email - optional to update
    hash  - optional to update
    vault - optional to update
    """
    email: Optional[str]
    hash: Optional[str]
    vault: Optional[str]
